---
availability: public
datetime: '2020-10-19T14:30:00Z'
title: The Path to Cloud Native | Rawkode Live
youtubeId: QuMWcA15UWc
---

Cloud native computing is an approach in software development that utilizes cloud computing to "build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds". Technologies such as containers, microservices, serverless functions and immutable infrastructure, deployed via declarative code are common elements of this architectural style.

These techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.

Frequently, cloud-native applications are built as a set of microservices that run in Docker containers, and may be orchestrated in Kubernetes and managed and deployed using DevOps and Git CI workflows (although there is a large amount of competing open source that supports cloud-native development). The advantage of using Docker containers is the ability to package all software needed to execute into one executable package. The container runs in a virtualized environment, which isolates the contained application from its environment.


ðŸ•° Timeline

00:00 - Holding Screen
01:20 - Introductions
03:00 - About Ihor
06:00 - What is Cloud Native?
09:45 - Can you be Cloud Native without Kubernetes?
11:00 - What are the main problems that Cloud Native solves?
16:50 - Do you need microservices to be Cloud Native?
19:20 - Should my new project start as microservices by default?
27:00 - Where does the complexity go when we adopt microservices?
29:00 - What are the common pitfalls / missteps when adopting Cloud Native?
32:00 - What is the first step for a Cloud Native migration?
36:00 - Do I need a database for each microservice?
39:50 - What are the pre-requisites for Cloud Native?


ðŸŒŽ Resources


Ihor Dvoretskyi - https://twitter.com/idvoretskyi
