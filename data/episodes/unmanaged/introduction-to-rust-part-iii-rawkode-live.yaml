---
availability: public
datetime: '2020-12-10T18:00:00Z'
title: Introduction to Rust (Part III) | Rawkode Live
youtubeId: gpgkizNS-hs
---

Want to try Equinix Metal? Use the code "rawkode-live" for $50 of credit, which is roughly 100 hours of compute on our smaller instances. Sign up at https://equinixmetal.com

---


Rust is a multi-paradigm programming language designed for performance and safety, especially safe concurrency. Rust is syntactically similar to C++ but can guarantee memory safety by using a borrow checker to validate references. Rust achieves memory safety without garbage collection, and reference counting is optional.

Rust was originally designed by Graydon Hoare at Mozilla Research, with contributions from Dave Herman, Brendan Eich, and others. The designers refined the language while writing the Servo layout or browser engine, and the Rust compiler. It has gained increasing use in industry, and Microsoft has been experimenting with the language for secure and safety-critical software components.

Rust has been voted the "most loved programming language" in the Stack Overflow Developer Survey every year since 2016.


ðŸ•° Timeline

00:00 - Holding screen
00:30 - Introductions
05:00 - Creating our first Rust application
08:00 - Explaining Rust editions
08:30 - Creating our first Rust application
15:45 - Lifetime elision
19:00 - Generic types and functions with Impl Into Option
33:40 - Program inputs with std::env
36:00 - Lifetimes
41:00 - Writing an anagram finder
52:50 - Pulling dependencies from Crates.io
55:00 - Looking at Structopt
1:05:00 - Loading a file with BufReader
1:15:20 - Collect
1:17:00 - Iterators, Filters, and Map

ðŸŒŽ Links

Jane Lusby - https://twitter.com/yaahc_
Awesome Rust Mentors - https://rustbeginners.github.io/awesome-rust-mentors/
Cheats.rs - https://cheats.rs
