---
availability: public
datetime: '2021-05-24T12:00:00Z'
title: Hands-on Introduction to Firecracker | Rawkode Live
youtubeId: dCa7qD2zGXs
---

In this episode, Radu and Grabriel will walk us through everything we need to know to get started with Firecracker.


🍿 Rawkode Live

Hosted by David McKay / 🐦 https://twitter.com/rawkode
Website: https://rawkode.live
Discord Chat: https://rawkode.live/chat

#RawkodeLive

🕰 Timeline

00:00 - Holding screen
00:50 - Introductions
02:45 - What is Firecracker?
06:30 - Installing Firecracker
12:30 - Running a Firecracker microVM
34:00 - Feature Demo: Snapshots
45:00 - Getting Involved
47:00 - Q&A

👥 About the Guests

Radu Weiss

  I’m is a software development manager, and have been working on Firecracker since it got started. Many customers love using serverless compute offerings, and I in turn love helping build some of the components that power them.


🐦 https://twitter.com/raduweiss
🧩 https://github.com/raduweiss



Gabriel Ionescu

  Embedded software engineer at heart with a focus on virtualization, currently working as an SDE on the Firecracker team. Present anywhere in the virtualization stack and serverless environment around Firecracker.


🐦 https://twitter.com/gc_plp
🧩 https://github.com/gc-plp



🔨 About the Technologies

Firecracker


Firecracker is an open source virtualization technology that is purpose-built for creating and managing secure, multi-tenant container and function-based services.
Firecracker enables you to deploy workloads in lightweight virtual machines, called microVMs, which provide enhanced security and workload isolation over traditional VMs, while enabling the speed and resource efficiency of containers. Firecracker was developed at Amazon Web Services to improve the customer experience of services like AWS Lambda and AWS Fargate .
Firecracker is a virtual machine monitor (VMM) that uses the Linux Kernel-based Virtual Machine (KVM) to create and manage microVMs. Firecracker has a minimalist design. It excludes unnecessary devices and guest functionality to reduce the memory footprint and attack surface area of each microVM. This improves security, decreases the startup time, and increases hardware utilization. Firecracker currently supports Intel CPUs, with AMD and Arm support in developer preview.
Firecracker is used by/integrated with (in alphabetical order): appfleet , containerd via firecracker-containerd , Fly.io , Kata Containers , Koyeb , OpenNebula , Qovery , UniK , and Weave FireKube (via Weave Ignite ).

🌏 https://firecracker-microvm.github.io/

🧩 https://github.com/firecracker-microvm/firecracker

##microVM ##Virtualisation
